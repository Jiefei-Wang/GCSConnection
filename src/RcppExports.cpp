// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// C_initializeClient
void C_initializeClient(SEXP R_credential_name, SEXP R_project_name);
RcppExport SEXP _googleCloudStorage_C_initializeClient(SEXP R_credential_nameSEXP, SEXP R_project_nameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type R_credential_name(R_credential_nameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_project_name(R_project_nameSEXP);
    C_initializeClient(R_credential_name, R_project_name);
    return R_NilValue;
END_RCPP
}
// C_get_bucket_names
std::vector<std::string> C_get_bucket_names();
RcppExport SEXP _googleCloudStorage_C_get_bucket_names() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(C_get_bucket_names());
    return rcpp_result_gen;
END_RCPP
}
// C_get_file_names
std::vector<std::string> C_get_file_names(SEXP bucket);
RcppExport SEXP _googleCloudStorage_C_get_file_names(SEXP bucketSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bucket(bucketSEXP);
    rcpp_result_gen = Rcpp::wrap(C_get_file_names(bucket));
    return rcpp_result_gen;
END_RCPP
}
// getbucketConnection
SEXP getbucketConnection(std::string R_credentials, SEXP R_project, SEXP R_bucket, SEXP R_file, SEXP R_canRead, SEXP R_canWrite, SEXP R_text, SEXP R_UTF8, SEXP open);
RcppExport SEXP _googleCloudStorage_getbucketConnection(SEXP R_credentialsSEXP, SEXP R_projectSEXP, SEXP R_bucketSEXP, SEXP R_fileSEXP, SEXP R_canReadSEXP, SEXP R_canWriteSEXP, SEXP R_textSEXP, SEXP R_UTF8SEXP, SEXP openSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type R_credentials(R_credentialsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_project(R_projectSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_bucket(R_bucketSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_file(R_fileSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_canRead(R_canReadSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_canWrite(R_canWriteSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_text(R_textSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_UTF8(R_UTF8SEXP);
    Rcpp::traits::input_parameter< SEXP >::type open(openSEXP);
    rcpp_result_gen = Rcpp::wrap(getbucketConnection(R_credentials, R_project, R_bucket, R_file, R_canRead, R_canWrite, R_text, R_UTF8, open));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_googleCloudStorage_C_initializeClient", (DL_FUNC) &_googleCloudStorage_C_initializeClient, 2},
    {"_googleCloudStorage_C_get_bucket_names", (DL_FUNC) &_googleCloudStorage_C_get_bucket_names, 0},
    {"_googleCloudStorage_C_get_file_names", (DL_FUNC) &_googleCloudStorage_C_get_file_names, 1},
    {"_googleCloudStorage_getbucketConnection", (DL_FUNC) &_googleCloudStorage_getbucketConnection, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_googleCloudStorage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
